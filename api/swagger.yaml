---
swagger: "2.0"
info:
  description: "This is documentation for IESO Microservice."
  version: "1.0.0"
  title: "Swagger IESO Routes Documentation"
  # termsOfService: "http://swagger.io/terms/"
  contact:
    email: "enerva@enerva.com"
  # license:
  #   name: "Apache 2.0"
  #   url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
- name: "application"
  description: "To Store application"
  externalDocs:
    description: "Find out more"
    url: "http://abc.abc"
schemes:
- "https"
- "http"
paths:
  /application/create:
    post:
      tags:
      - "application"
      summary: "Create application"
      description: "Creates an application."
      operationId: "createApplication"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created application object"
        required: true
        schema:
          $ref: "#/definitions/Application"
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "User"   
  /application/store:
    get:
      tags:
      - "application"
      summary: "Store the application"
      description: ""
      operationId: "storeApplication"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Application"
        "500":
          description: "Server Error"
  /application/store/{id}:
    get:
      tags:
      - "application"
      summary: "Get application by id"    
      description: "Provide corresponding id"
      operationId: "getApplicationById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Give the id"
        required: true
        type: "string"
      responses:
        "201":
          description: "successfully retrieved"
          schema:
            $ref: "#/definitions/Application"
        "500":
          description: "Server Error"
  /application/userList:
    get:
      tags:
      - "application"
      summary: "Get all users"    
      description: ""
      operationId: "getUserList"
      produces:
      - "application/json"
      responses:
        "201":
          description: "successfully retrieved"
          schema:
            $ref: "#/definitions/Application"
        "500":
          description: "Server Error"        
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Application:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "Application"
    example:
      firstName: "firstName"
      lastName: "lastName"
      password: "password"
      userStatus: 6
      phone: "phone"
      id: 0
      email: "email"
      username: "username"    
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
